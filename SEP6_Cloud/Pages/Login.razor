@page "/login"

@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@using System.ComponentModel
@using SEP6_Cloud.Serivces
@inject NavigationManager NavigationManager
@inject AccountService AccountService 


    <Form Model="@model"
          OnFinish="OnFinishLogin"
          OnFinishFailed="OnFinishFailed"
          LabelColSpan="8"
          WrapperColSpan="16">
        <FormItem>
            <Input @bind-Value="@context.Username" />
        </FormItem>
        <FormItem Label="Password">
            <InputPassword @bind-Value="@context.Password" />
        </FormItem>
        <FormItem WrapperColOffset="8" WrapperColSpan="16">
            <Button Type="@ButtonType.Primary" HtmlType="submit">
                Login
            </Button>
             <Button HtmlType="button" OnClick="@(()=>{_ModalVisible = true; })">
                Register
            </Button>
        </FormItem>
    </Form>
    <span style="color:red">@errorMessage</span>
	
	<Modal Title=@("Register")
           Visible="@_ModalVisible"
           OnOk="@HandleOk"
           OnCancel="@HideUserModal"
           >
        <Form Model="@model" Layout="@FormLayout.Vertical" OnFinish="OnFinishRegister" @ref="@_formRegister">
            <FormItem>
                <Input @bind-Value="@context.Username" />
            </FormItem>
            <FormItem Label="Password">
                <InputPassword @bind-Value="@context.Password" />
            </FormItem>
        </Form>
    </Modal>
@code
{
    public class Model
    {
        [Required, DisplayName("User Name")]
        public string Username { get; set; }
        [Required]
        public string Password { get; set; }
        public bool RememberMe { get; set; } = true;
    }
    private Form<Model> _formRegister;
    private Model model = new Model();
    public bool _ModalVisible = false;
    string errorMessage;

    private async Task OnFinishLogin(EditContext editContext)
    {
        errorMessage = "";
        if (model.Username == "admin" && model.Password == "admin"){
            NavigationManager.NavigateTo("/");
        }
        else{
            errorMessage = "Wrong Username and/or Password";
        }
        /*errorMessage="";
        try
        {
            await AccountService.Login(model.Username, model.Password);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }*/
    }

    private void OnFinishFailed(EditContext editContext)
    {
        errorMessage = "Somethhing went wrong";
    }
	
	private async Task OnFinishRegister(EditContext editContext)
    {
		errorMessage = "";
		try
        {
            await AccountService.Register(model.Username, model.Password);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }
	
     private void HideUserModal()
    {
        _ModalVisible = false;
		_formRegister.Reset();
    }
	
	private void HandleOk(MouseEventArgs args)
    {
        _formRegister.Submit();
    }
}